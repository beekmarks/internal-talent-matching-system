/**
 * Mock implementation of the OllamaService for testing purposes
 */
export class MockOllamaService {
  /**
   * Generate a mock response based on the prompt
   * @param prompt The user's message
   * @returns A predefined response based on the prompt content
   */
  async generateResponse(prompt: string): Promise<string> {
    // Check what type of prompt we're dealing with
    if (prompt.includes('team dynamics')) {
      return JSON.stringify(this.generateTeamDynamicsResponse());
    } else if (prompt.includes('business unit')) {
      return JSON.stringify(this.generateBusinessUnitInsightsResponse());
    } else if (prompt.includes('Extract the following from this request')) {
      return this.generateExtractedRequirementsResponse();
    } else {
      return JSON.stringify({ message: "This is a mock response from the LLM service. In a production environment, this would be generated by the actual LLM." });
    }
  }

  /**
   * Generate a mock team dynamics response
   */
  private generateTeamDynamicsResponse(): object {
    return {
      teamDynamics: {
        strengths: [
          "Strong technical capabilities across mobile development frameworks",
          "Good mix of experienced leaders and technical specialists",
          "Diverse perspectives that can lead to innovative solutions"
        ],
        potentialChallenges: [
          "Some team members may need additional support in adapting to the fast-paced environment",
          "Regular communication channels should be established to ensure alignment"
        ],
        overallAssessment: "This team has the necessary dynamics to successfully complete the mobile banking application project."
      }
    };
  }

  /**
   * Generate a mock business unit insights response
   */
  private generateBusinessUnitInsightsResponse(): object {
    return {
      businessUnitInsights: {
        keyInsights: [
          "Several team members have previous experience with financial regulations and compliance requirements",
          "The team has a good understanding of banking workflows and customer expectations",
          "There is existing knowledge of security protocols specific to financial applications"
        ],
        knowledgeGaps: [
          "The team may benefit from additional expertise in recent financial regulations",
          "Consider arranging a knowledge-sharing session with the compliance department"
        ],
        overallAssessment: "This team's business unit knowledge provides a solid foundation for developing a secure and compliant banking application."
      }
    };
  }

  /**
   * Generate a mock extracted requirements response
   */
  private generateExtractedRequirementsResponse(): string {
    return JSON.stringify({
      hardSkills: ["React Native", "Node.js", "Security", "API Development", "Mobile Development"],
      softSkills: ["Communication", "Teamwork", "Adaptability"],
      projectContext: {
        projectPhase: "inception",
        projectType: "mobile",
        projectGoals: ["Develop secure banking app", "Deliver prototype in 3 months"],
        targetDeliveryDate: "2025-06-16T00:00:00.000Z"
      },
      teamDynamics: {
        preferredAttributes: ["Communication", "Collaboration", "Adaptability"],
        formationSpeed: "quick"
      },
      businessUnitRelevance: {
        relevantUnits: ["Finance", "Security"],
        knowledgeRequired: true
      }
    });
  }

  /**
   * Create a system prompt (not used in mock, but kept for compatibility)
   */
  private createSystemPrompt(prompt: string): string {
    return prompt;
  }
}
